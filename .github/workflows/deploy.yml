name: Provision Infrastructure with Terraform & Install Docker with Ansible

on:
  workflow_dispatch:
  # Uncomment below to run automatically on push to main
  # push:
  #   branches:
  #     - main

jobs:
  terraform:
    name: Provision Infrastructure with Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.4"

      - name: Set AWS credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Run terraform init
        working-directory: ./terraform
        run: terraform init

      - name: Run terraform plan
        working-directory: ./terraform
        run: |
          terraform plan $([ ! -z "${{ secrets.CUSTOM_DOMAIN_NAME }}" ] && echo "-var domain_name=${{ secrets.CUSTOM_DOMAIN_NAME }}")

      - name: Run terraform apply
        working-directory: ./terraform
        run: |
          terraform apply -auto-approve $([ ! -z "${{ secrets.CUSTOM_DOMAIN_NAME }}" ] && echo "-var domain_name=${{ secrets.CUSTOM_DOMAIN_NAME }}")

      - name: Extract IPs from terraform output
        id: register
        working-directory: ./terraform
        run: |
          echo "instance_ips=$(terraform output -json instance_ips | jq -r '.[]' | paste -sd "," -)" >> $GITHUB_OUTPUT

      - name: Show instance_ips (for debugging)
        run: |
          echo "IPs obtained from Terraform: ${{ steps.register.outputs.instance_ips }}"

      - name: Show Terraform outputs
        working-directory: ./terraform
        run: |
          print_output() {
            local output_name=$1
            if terraform output -raw $output_name > /dev/null 2>&1; then
              echo "$output_name: $(terraform output -raw $output_name)"
            else
              echo "$output_name is not set."
            fi
          }
          print_output "alb_dns_name"
          print_output "domain_name_url"
          echo "instance_ips: $(terraform output -json instance_ips | jq -r '.[]' | paste -sd "," -)"
          echo "route53_name_servers: $(terraform output -json route53_name_servers | jq -r '.[][]' | paste -sd "," -)"

    outputs: # Accesses output from within the same job
      instance_ips: ${{ steps.register.outputs.instance_ips }}

  ansible:
    name: Install Docker with Ansible
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show instance_ips (for debugging)
        run: |
          echo "IPs passed to Ansible job: ${{ needs.terraform.outputs.instance_ips }}"

      - name: Set up Ansible SSH key
        run: |
          echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" | base64 --decode > ssh_private_key.pem
          chmod 600 ssh_private_key.pem

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -v -i "${{ needs.terraform.outputs.instance_ips }}," \
          --private-key ssh_private_key.pem \
          -u ubuntu \
          playbooks/install-docker.yml

      - name: Cleanup SSH private key
        run: rm -f ssh_private_key.pem
